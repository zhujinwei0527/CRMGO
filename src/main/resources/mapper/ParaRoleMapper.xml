<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.crmgo.register.mapper.ParaRoleMapper">
    <resultMap id="BaseResultMap" type="com.example.crmgo.register.entity.ParaRole">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="role_id" jdbcType="VARCHAR" property="roleId"/>
        <result column="role_name" jdbcType="VARCHAR" property="roleName"/>
        <result column="role_permission" jdbcType="INTEGER" property="rolePermission"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="valid_flag" jdbcType="INTEGER" property="validFlag"/>
    </resultMap>
    <sql id="Base_Column_List">
        id
        , role_id, role_name, role_permission, create_time, update_time, valid_flag
    </sql>
    <select id="selectByRoleId" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from tb_para_role
        where role_id = #{roleId,jdbcType=VARCHAR}
        and valid_flag = 0
    </select>

    <select id="selectAll" resultMap="BaseResultMap">
        select id,
               role_id,
               role_name,
               role_permission,
               create_time,
               update_time,
               valid_flag
        from tb_para_role
        order by role_permission, id
    </select>

    <delete id="deleteByRoleId" parameterType="java.lang.String">
        delete
        from tb_para_role
        where role_id = #{roleId,jdbcType=VARCHAR}
    </delete>
    <insert id="insert" parameterType="com.example.crmgo.register.entity.ParaRole"
            useGeneratedKeys="true" keyProperty="id" keyColumn="id">
        insert into tb_para_role (id, role_id, role_name,
                                  role_permission, create_time, update_time,
                                  valid_flag)
        values (#{id,jdbcType=INTEGER}, #{roleId,jdbcType=VARCHAR}, #{roleName,jdbcType=VARCHAR},
                #{rolePermission,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP},
                #{validFlag,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" parameterType="com.example.crmgo.register.entity.ParaRole"
            useGeneratedKeys="true" keyProperty="id" keyColumn="id">
        insert into tb_para_role
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="roleId != null">
                role_id,
            </if>
            <if test="roleName != null">
                role_name,
            </if>
            <if test="rolePermission != null">
                role_permission,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="validFlag != null">
                valid_flag,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="roleId != null">
                #{roleId,jdbcType=VARCHAR},
            </if>
            <if test="roleName != null">
                #{roleName,jdbcType=VARCHAR},
            </if>
            <if test="rolePermission != null">
                #{rolePermission,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="validFlag != null">
                #{validFlag,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByRoleIdSelective" parameterType="com.example.crmgo.register.entity.ParaRole">
        update tb_para_role
        <set>
            <if test="roleId != null">
                role_id = #{roleId,jdbcType=INTEGER},
            </if>
            <if test="roleName != null">
                role_name = #{roleName,jdbcType=VARCHAR},
            </if>
            <if test="rolePermission != null">
                role_permission = #{rolePermission,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="validFlag != null">
                valid_flag = #{validFlag,jdbcType=INTEGER},
            </if>
        </set>
        where role_id = #{roleId,jdbcType=VARCHAR}
    </update>
    <update id="updateByRoleId" parameterType="com.example.crmgo.register.entity.ParaRole">
        update tb_para_role
        set role_id         = #{roleId,jdbcType=VARCHAR},
            role_name       = #{roleName,jdbcType=VARCHAR},
            role_permission = #{rolePermission,jdbcType=INTEGER},
            create_time     = #{createTime,jdbcType=TIMESTAMP},
            update_time     = #{updateTime,jdbcType=TIMESTAMP},
            valid_flag      = #{validFlag,jdbcType=INTEGER}
        where role_id = #{roleId,jdbcType=VARCHAR}
    </update>
</mapper>